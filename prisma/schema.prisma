// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  userName String @db.VarChar(255) @unique
  password String @db.VarChar(255)

  createdAt DateTime?
  updatedAt DateTime?
  deletedAt DateTime?

  authentications Authentication[]
  services Service[]

  @@map("users")
}

model Authentication {
  id Int @id @default(autoincrement())
  apiKey String @db.VarChar(255) @unique
  isValid Boolean? @default(false)

  createdAt DateTime?
  updatedAt DateTime?
  deletedAt DateTime?

  userId Int
  user User @relation(fields: [userId], references: [id])
 
  @@map("authentications")
}

enum ListingType {
  WHITELIST
  BLACKLIST
}

model Service {
  id Int @id @default(autoincrement())

  name String @db.VarChar(255)
  type String @db.VarChar(255)
  hostUrl String @db.Text

  listing ListingType @default(BLACKLIST)

  createdAt DateTime?
  updatedAt DateTime?
  deletedAt DateTime?

  api Api[]

  userId Int
  user User @relation(fields: [userId], references: [id])

  @@map("services")
}

model Api {
  id Int @id @default(autoincrement())

  name String @db.VarChar(255)
  url String @db.Text
  method String @db.VarChar(255)

  createdAt DateTime?
  updatedAt DateTime?
  deletedAt DateTime?

  serviceId Int
  service Service @relation(fields: [serviceId], references: [id])

  // proxy Proxy[]

  @@map("apis")
}

// model Proxy {

//   id Int @id @default(autoincrement())
//   proxyUrl String @db.Text
//   rewritePath String? @db.Text

//   createdAt DateTime?
//   updatedAt DateTime?
//   deletedAt DateTime?

//   apiId Int
//   api Api @relation(fields: [apiId], references: [id])

//   @@map("proxies")

// }
